
server {
    listen       4777;

	location / {
		root  /var/www/html;
		index index.html index.json index.csv;
		expires epoch;
	}
		
	location ~ ^/max-age/(\d+)-seconds/(\d+)-age/(\d+)-swr {
		root  /var/www/html;
		index index.html index.json index.csv;		
		add_header "Age" "$2";		
		add_header "Cache-Control" "max-age=$1, stale-while-revalidate=$3";		
		default_type application/json;
		return 200 "{\"message\": \"I last for $1 seconds and stale-while-revalidate for $3 seconds (and have an age of $2 seconds)\"}";
	}

	location ~ ^/max-age/(\d+)-seconds/(\d+)-age {
		root  /var/www/html;
		index index.html index.json index.csv;
		expires $1s;
		add_header "Age" "$2";
	   default_type application/json;
		return 200 "{\"message\": \"I last for $1 seconds (and have an age of $2 seconds)\"}";
	}

	location ~ ^/max-age/(\d+)-seconds {
		root  /var/www/html;
		index index.html index.json index.csv;
		expires $1s;
	   default_type application/json;
		return 200 "{\"message\": \"I last for $1 seconds\"}";
	}

	location ~ ^/max-age/.+-expires-in-(\d+).json {
		root  /var/www/html;
		index index.html index.json index.csv;
		expires $1s;
	}

	location /max-age/broken-max-age-value {
		root  /var/www/html;
		index index.html index.json index.csv;
		add_header "Cache-Control" "max-age=hans";
		add_header "Age" "10";
        default_type application/json;
		return 200 "{\"message\": \"I last for hans seconds (and have an age of 10 seconds)\"}";
	}


	location /max-age/ {
		root  /var/www/html;
		index index.html index.json index.csv;
	}

	location /gzip/ {
		gzip on;
		gzip_min_length 1;
		gzip_types "*";
		gzip_proxied any;
		root  /var/www/html;
		index index.html index.json;
		expires epoch;
	}

	location /image/ {
		root  /var/www/html;
		index cc-public-domain-mark.png;
		expires epoch;
	}

	location /status500/ {
        return 500 '{"fake": "500er json"}';
	}

	location /status409/ {
        return 409 '{"fake": "509er json"}';
	}

	location /status401/ {
		auth_basic "This is restricted";
		auth_basic_user_file /etc/nginx/does-not-exist;
	}

	location /bad-gateway/ {
		proxy_pass http://127.0.0.1:4776;
	}

	location /echo/ {
		lua_need_request_body on;
		content_by_lua '
		         ngx.header["Content-Type"] = ngx.var.http_content_type
		         ngx.header["X-Request-Method"] = ngx.var.request_method
		         ngx.header["X-Custom-Header"] = ngx.var.http_custom_header
                 ngx.print(ngx.var.request_body)
	    ';
	}

}
